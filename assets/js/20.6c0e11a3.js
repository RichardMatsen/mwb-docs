(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{199:function(t,a,s){"use strict";s.r(a);var n=s(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"redux-selectors-observable-arrays"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux-selectors-observable-arrays","aria-hidden":"true"}},[t._v("#")]),t._v(" Redux Selectors - Observable Arrays")]),t._v(" "),s("h2",{attrs:{id:"problem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#problem","aria-hidden":"true"}},[t._v("#")]),t._v(" Problem")]),t._v(" "),s("p",[t._v("When using a "),s("strong",[t._v("Redux selector")]),t._v(" as source for an RxJS chain of operators, if it includes an operator that require a "),s("em",[s("strong",[t._v("completed")])]),t._v(" notification (e.g, "),s("code",[t._v("forkJoin")]),t._v(", "),s("code",[t._v("toArray")]),t._v(", "),s("code",[t._v("count")]),t._v("), the pipeline will fail silently.")]),t._v(" "),s("p",[t._v("This is because Redux selectors do not emit a complete notification. They are intended to continuously update components whenever state changes.")]),t._v(" "),s("h2",{attrs:{id:"solutions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solutions","aria-hidden":"true"}},[t._v("#")]),t._v(" Solutions")]),t._v(" "),s("p",[t._v("There are a few ways to handle this.")]),t._v(" "),s("h3",{attrs:{id:"_1-use-take-to-add-a-completed-notification-at-the-source"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-use-take-to-add-a-completed-notification-at-the-source","aria-hidden":"true"}},[t._v("#")]),t._v(" #1 - Use take() to add a completed notification at the source")]),t._v(" "),s("p",[t._v("If the component only needs a single value, use "),s("code",[t._v("take(1)")]),t._v(" at source to add the completed notification.")]),t._v(" "),s("p",[t._v("If the store element is being populated asynchronously, the take should be applied after a "),s("code",[t._v("filter(x => !!x)")]),t._v(" which will yield the first non-null value (Note the initial state should be set to "),s("code",[t._v("null")]),t._v(").")]),t._v(" "),s("p",[t._v("The filter / take sequence is used in the "),s("code",[t._v("waitFor$()")]),t._v(" custom operator,")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{attrs:{class:"token function-variable function"}},[t._v("waitFor$")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fn "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" fn "),s("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("!")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("filter")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("take")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-use-takewhile-to-restore-a-flattened-observable-any"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-use-takewhile-to-restore-a-flattened-observable-any","aria-hidden":"true"}},[t._v("#")]),t._v(" #2 - Use takeWhile to restore a flattened Observable<any[]>")]),t._v(" "),s("p",[t._v("When an Observable of array needs to process individual elements, and the result of the process is itself Observable (see below, fetching file contents), the steps need to be")]),t._v(" "),s("ul",[s("li",[t._v("convert "),s("code",[t._v("Observable<any[]>")]),t._v(" to "),s("code",[t._v("Observable<any>")]),t._v(" with "),s("code",[t._v("mergeMap(x => x)")])]),t._v(" "),s("li",[t._v("process and return "),s("code",[t._v("Observable<another>")]),t._v(" with "),s("code",[t._v("mergeMap")]),t._v(" or "),s("code",[t._v("concatMap")])]),t._v(" "),s("li",[t._v("use "),s("code",[t._v("toArray")]),t._v(" to return to array processing, i.e "),s("code",[t._v("Observable<another[]>")])])]),t._v(" "),s("p",[t._v("The problem is again a lack of completed notification. This can be added using "),s("code",[t._v("takeWhile()")]),t._v(" to check against the array length ("),s("code",[t._v("take(n)")]),t._v(" does not work).")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("withContent$")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files$"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Observable"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("IFileInfo"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numToInitialize"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Observable"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("IFileInfo"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" files$\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("do")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" count "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("mergeMap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" files"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("concatMap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n      file"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),s("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" index "),s("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" numToInitialize\n        "),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" Observable"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("of")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getContent")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("takeWhile")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" index "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("toArray")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("handleError")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'getContentForList$'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("or")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("withContent$")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files$"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Observable"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("IFileInfo"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numToInitialize"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Observable"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("IFileInfo"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" files$"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("mergeMap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" files"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Observable"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("concatMap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n        file"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),s("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" index "),s("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" numToInitialize\n          "),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" Observable"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("of")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getContent")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("takeWhile")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" index "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("toArray")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("handleError")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'withContent$'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-use-scan-to-aggregate-item-count-or-back-to-an-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-use-scan-to-aggregate-item-count-or-back-to-an-array","aria-hidden":"true"}},[t._v("#")]),t._v(" #3 - Use scan to aggregate item count or back to an array")]),t._v(" "),s("p",[s("code",[t._v("scan()")]),t._v(" can gather values emitted into an array, but does not require a complete notification.  It will emit each version of the array with 1,2,3 etc elements, so should be followed by a filter to take just the last emit.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("withContent$")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files$"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Observable"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("IFileInfo"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numToInitialize"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Observable"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("IFileInfo"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" files$\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("do")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" count "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("mergeMap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" files"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("concatMap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("                   "),s("span",{attrs:{class:"token comment"}},[t._v("// Use concatMap to preserve ordering")]),t._v("\n      file"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),s("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" index "),s("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" numToInitialize\n        "),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" Observable"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("of")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getContent")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("scan")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("acc"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("acc"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("filter")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" count"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("handleError")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'getContentForList$'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-use-forkjoin-to-aggregate-inner-observables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-use-forkjoin-to-aggregate-inner-observables","aria-hidden":"true"}},[t._v("#")]),t._v(" #4 - Use forkJoin to aggregate inner observables")]),t._v(" "),s("p",[s("code",[t._v("forkJoin")]),t._v(" waits for a list of observables to resolve, and returns them as an Observable array. With this operator, we don't need to specifically know the array length. However, there are two caveats")]),t._v(" "),s("ul",[s("li",[t._v("all the inner observables must complete")]),t._v(" "),s("li",[t._v("if one inner errors, forkJoin will error "),s("em",[s("strong",[t._v("unless")])]),t._v(" there is error handling on every inner observable, such that the error is swallowed")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("withContent$")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files$"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Observable"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("IFileInfo"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numToInitialize"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Observable"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("IFileInfo"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" files$"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("concatMap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" withContent$ "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" files"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("map")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" file"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),s("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" index "),s("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" numToInitialize\n        "),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" Observable"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("of")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getContent")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("forkJoin")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("withContent$"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("handleError")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'getContentForList$'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],!1,null,null,null);o.options.__file="redux-observable-arrays.md";a.default=o.exports}}]);